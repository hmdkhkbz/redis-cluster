apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: "redis-headless"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "redis-server"
            - "/etc/redis/redis.conf"
            - "--cluster-enabled"
            - "yes"
            - "--appendonly"
            - "yes"
          ports:
            - containerPort: {{ .Values.redis.port | default 6379 }}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /etc/redis
          resources: {{- toYaml .Values.redis.resources | nindent 12 }}

        - name: redis-exporter
          image: oliver006/redis_exporter:v1.60.0
          args:
            - "--redis.addr=redis://localhost:{{ .Values.redis.port | default 6379 }}"
            {{- if .Values.redis.auth.enabled }}
            - "--redis.password=$(REDIS_PASSWORD)"
            {{- end }}
          env:
            {{- if .Values.redis.auth.enabled }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-auth
                  key: redis-password
            {{- end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.redisExporter.port | default 9121 }}
              protocol: TCP
          resources: {{- toYaml .Values.redisExporter.resources | nindent 12 }}

      volumes:
        - name: config
          configMap:
            name: redis-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.storage.class | default "standard" }}
        resources:
          requests:
            storage: {{ .Values.storage.size | default "8Gi" }}